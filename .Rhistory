#plot
ggplot(aes(Date, log_RR, color = country)) +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
#last update
(last_update = format(max(merged$Date),'%A, %d. %B %Y'))
#counts
merged %>%
filter(!is.na(number), Type != "intensive") %>%
#plot
ggplot(aes(Date, number, color = country, linetype = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = number)) +
scale_y_continuous("Count of persons") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/counts.png")
#changes
merged %>%
filter(!is.na(change), Type != "intensive") %>%
#plot
ggplot(aes(Date, change, color = country, linetype = Type)) +
scale_y_continuous("Change relative to day before") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = change)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: change in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/change.png")
#plot the log10 RR's, then relabel the breaks to fit
merged %>%
filter(!is.na(log_RR), Type != "intensive") %>%
#plot
ggplot(aes(Date, log_RR, color = country)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/growth.png")
#plot the log10 RR's, then relabel the breaks to fit
merged %>%
filter(!is.na(log_RR), Type != "intensive") %>%
#plot
ggplot(aes(Date, log_RR, color = country)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5) %>% to_log10RR(),
limits = c(-.10, NA) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
#growth
norway %>%
filter(!is.na(log_RR)) %>%
#plot
ggplot(aes(Date, log_RR, color = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5) %>% to_log10RR(),
limits = c(-.10, NA) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
theme_classic() +
ggtitle("Norwegian COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {no_last_update}"))
#growth
norway %>%
filter(!is.na(log_RR)) %>%
#plot
ggplot(aes(Date, log_RR, color = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5, 3) %>% to_log10RR(),
limits = c(-.10, NA) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
theme_classic() +
ggtitle("Norwegian COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {no_last_update}"))
#growth
norway %>%
filter(!is.na(log_RR)) %>%
#plot
ggplot(aes(Date, log_RR, color = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5, 1, 3) %>% to_log10RR(),
limits = c(-.10, NA) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
theme_classic() +
ggtitle("Norwegian COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {no_last_update}"))
#last update
(last_update = format(max(merged$Date),'%A, %d. %B %Y'))
#counts
merged %>%
filter(!is.na(number), Type != "intensive") %>%
#plot
ggplot(aes(Date, number, color = country, linetype = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = number)) +
scale_y_continuous("Count of persons") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/counts.png")
#changes
merged %>%
filter(!is.na(change), Type != "intensive") %>%
#plot
ggplot(aes(Date, change, color = country, linetype = Type)) +
scale_y_continuous("Change relative to day before") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = change)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: change in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/change.png")
#plot the log10 RR's, then relabel the breaks to fit
merged %>%
filter(!is.na(log_RR), Type != "intensive") %>%
#plot
ggplot(aes(Date, log_RR, color = country)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5, 1, 3) %>% to_log10RR(),
limits = c(-.10, NA) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/growth.png")
p_load(kirkegaard, googlesheets4, lubridate, ggrepel, jsonlite, rvest)
#scrape danish data
danish_raw = GET("https://www.sst.dk/da/corona/tal-og-overvaagning")
#scrape danish data
danish_raw = read_html("https://www.sst.dk/da/corona/tal-og-overvaagning")
d_orig = danish_raw %>%
html_nodes(":nth-child(31) td")
d_orig = danish_raw %>%
html_nodes(":nth-child(31) td") %>%
html_table()
d_orig = danish_raw %>%
html_nodes(":nth-child(31) td") %>%
map(html_table)
danish_raw %>%
html_nodes(":nth-child(31) td")
d_orig = danish_raw %>%
html_table()
View(d_orig)
d_orig = danish_raw %>%
html_table() %>%
[4:6]
d_orig = danish_raw %>%
html_table() %>%
.[4:6]
d_orig
View(d)
d_orig = danish_raw %>%
html_table() %>%
.[4:6] %>%
map2(.y = c("hospitalized", "intensive", "respirator"), function(x, y) {
x %>% mutate(
Type = y
)
})
View(d_orig)
d_orig = danish_raw %>%
html_table() %>%
.[4:6] %>%
map2_df(.y = c("hospitalized", "intensive", "respirator"), function(x, y) {
x %>% mutate(
Type = y
)
})
View(d_orig)
View(d_orig)
View(d_orig)
View(d)
View(d)
View(d)
d_orig = read_sheet("https://docs.google.com/spreadsheets/d/1o-2vsjaAsPzypZCC-rXplY8WVBO8kMsCpo6Or4Ek_xI/edit#gid=0", sheet = 1)
d_orig %>% colnames
d_orig %>% colnames %>% dput
#scrape danish data
danish_raw = read_html("https://www.sst.dk/da/corona/tal-og-overvaagning")
danish_raw = danish_raw %>%
html_table() %>%
.[4:6] %>%
map2_df(.y = c("hospitalized", "intensive", "respirator"), function(x, y) {
#fix column names
colnames = c("Date", "Region Nordjylland", "Region Midtjylland", "Region Syddanmark",
"Region Hovedstaden", "Region Sjælland", "Hele landet")
x[-1, ] %>%
mutate(
Type = y
) %>%
set_colnames(colnames)
})
View(danish_raw)
#scrape danish data
danish_raw = read_html("https://www.sst.dk/da/corona/tal-og-overvaagning")
#long format
danish_long = danish_raw %>%
html_table() %>%
.[4:6] %>%
map2_df(.y = c("hospitalized", "intensive", "respirator"), function(x, y) {
#fix column names
colnames = c("Date", "Region Nordjylland", "Region Midtjylland", "Region Syddanmark",
"Region Hovedstaden", "Region Sjælland", "Hele landet", "Type")
x[-1, ] %>%
mutate(
Type = y
) %>%
set_colnames(colnames)
})
View(danish_long)
#long format
danish_long = danish_raw %>%
html_table() %>%
.[4:6] %>%
map2_df(.y = c("hospitalized", "intensive", "respirator"), function(x, y) {
#fix column names
colnames = c("Date", "Region Nordjylland", "Region Midtjylland", "Region Syddanmark",
"Region Hovedstaden", "Region Sjælland", "Hele landet", "Type")
x[-c(1:2), ] %>%
mutate(
Type = y
) %>%
set_colnames(colnames)
})
#long format
danish_long = danish_raw %>%
html_table() %>%
.[4:6] %>%
map2_df(.y = c("hospitalized", "intensive", "respirator"), function(x, y) {
#fix column names
colnames = c("Date", "Region Nordjylland", "Region Midtjylland", "Region Syddanmark",
"Region Hovedstaden", "Region Sjælland", "Hele landet", "Type")
x[-c(1:2), ] %>%
mutate(
Type = y
) %>%
set_colnames(colnames)
})
#recode
d = danish_long %>%
#drop NA
miss_filter() %>%
#gather to long format
gather(key = region, value = number, `Region Nordjylland`:`Hele landet`) %>%
#fix date
mutate(
number = number %>% str_replace("[✱ ]*", "") %>% as.numeric(),
Date = (Date + " 2020") %>% parse_date(format = "%d. %B %Y", locale = locale("da"))
)
#scrape danish data
danish_raw = read_html("https://www.sst.dk/da/corona/tal-og-overvaagning")
#long format
danish_long = danish_raw %>%
html_table() %>%
.[4:6] %>%
map2_df(.y = c("hospitalized", "intensive", "respirator"), function(x, y) {
#fix column names
colnames = c("Date", "Region Nordjylland", "Region Midtjylland", "Region Syddanmark",
"Region Hovedstaden", "Region Sjælland", "Hele landet", "Type")
x[-c(1:2), ] %>%
mutate(
Type = y
) %>%
set_colnames(colnames)
})
#recode
d = danish_long %>%
#drop NA
miss_filter() %>%
#gather to long format
gather(key = region, value = number, `Region Nordjylland`:`Hele landet`) %>%
#fix date
mutate(
number = number %>% str_replace("[✱ ]*", "") %>% as.numeric(),
Date = (Date + " 2020") %>% parse_date(format = "%d. %B %Y", locale = locale("da"))
)
#add growth values
#to do so, we need subgroup
d = d %>%
#sort by date first
arrange(Date) %>%
#then subgroup to each type and region
plyr::ddply(c("region", "Type"), function(dd) {
#add growth
dd %>%
mutate(
change = number - lag(number),
growth = change / lag(number),
log_RR = to_log10RR(growth),
country = "Denmark"
)
})
View(d)
#norway
#get JSON
norway_raw = fromJSON(httr::GET("https://redutv-api.vg.no/corona/v1/areas/country/reports?include=hospitals") %>% as.character())
#mutate
norway = norway_raw$hospitals$timeseries$total %>%
as_tibble() %>%
select(date, hospitalized, respiratory) %>%
gather(key = Type, value = number, -date) %>%
arrange(date) %>%
#change values
plyr::ddply("Type", function(dd) {
dd %>% mutate(
change = number - lag(number),
growth = change / lag(number),
log_RR = to_log10RR(growth)
)
}) %>%
mutate(
date = date %>% ymd(),
country = "Norway",
Type = Type %>% mapvalues(from = "respiratory", to = "respirator")
) %>% rename(
Date = date
)
#join data
merged = d %>%
filter(region == "Hele landet") %>%
select(-region) %>%
bind_rows(
norway
)
#last update
(last_update = format(max(merged$Date),'%A, %d. %B %Y'))
#counts
merged %>%
filter(!is.na(number), Type != "intensive") %>%
#plot
ggplot(aes(Date, number, color = country, linetype = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = number)) +
scale_y_continuous("Count of persons") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
#counts
merged %>%
filter(!is.na(number), Type != "intensive") %>%
#plot
ggplot(aes(Date, number, color = country, linetype = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = number),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Count of persons") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish & Norwegian COVID-19 hospital data: number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/counts.png")
#counts
merged %>%
filter(!is.na(number), Type != "intensive") %>%
#plot
ggplot(aes(Date, number, color = country, linetype = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = number),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Count of persons") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish🇩🇰  & Norwegian🇳🇴 COVID-19 hospital data: number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
#last update
(last_update = format(max(merged$Date),'%A, %d. %B %Y'))
#counts
merged %>%
filter(!is.na(number), Type != "intensive") %>%
#plot
ggplot(aes(Date, number, color = country, linetype = Type)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = number),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Count of persons") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish🇩🇰 & Norwegian🇳🇴 COVID-19 hospital data: number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/counts.png")
#changes
merged %>%
filter(!is.na(change), Type != "intensive") %>%
#plot
ggplot(aes(Date, change, color = country, linetype = Type)) +
scale_y_continuous("Change relative to day before") +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = change),
size = 3,
segment.color = "black",
segment.alpha = .3) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish🇩🇰 & Norwegian🇳🇴 COVID-19 hospital data: change in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/change.png")
#plot the log10 RR's, then relabel the breaks to fit
merged %>%
filter(!is.na(log_RR), Type != "intensive") %>%
#plot
ggplot(aes(Date, log_RR, color = country)) +
geom_hline(yintercept = 0, linetype = "dotted") +
geom_path() +
geom_text_repel(aes(label = growth %>% format_value()),
size = 3,
segment.color = "black",
segment.alpha = .3) +
scale_y_continuous("Percent change relative to day before",
labels = format_log10,
breaks = c(-.10, 0, .10, .5, 1, 3) %>% to_log10RR(),
limits = c(-.10, NA) %>% to_log10RR()) +
scale_x_date(date_breaks = "1 day", guide = guide_axis(n.dodge = 3)) +
facet_wrap("Type", nrow = 2, scales = "free_y") +
theme_classic() +
ggtitle("Danish🇩🇰 & Norwegian🇳🇴 COVID-19 hospital data: growth in % in number of hospitalized by type of care",
str_glue("Data updated as of {last_update}"))
GG_save("figs/growth.png")
theme_set(theme_classic())
#write data out
write_csv(merged, "data/merge_data.csv", na = "")
write_csv(d, "data/dk_data.csv", na = "")
write_csv(norway, "data/no_data.csv", na = "")
c(0, .05, .50, 1, .111, -.5) %>% to_log10RR()
